<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 2023 Contributors to the Eclipse Foundation. All rights reserved.
    Copyright (c) 2010, 2021 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.glassfish.build</groupId>
        <artifactId>glassfishbuild-maven-plugin-parent</artifactId>
        <version>4.0.0-SNAPSHOT</version>
    </parent>

    <artifactId>glassfish-hk2-config</artifactId>
    <packaging>jar</packaging>

    <name>HK2 Configuration for GlassFish</name>
    <description>Used by GlassFishBuild Maven Plugin to generate hk2-locator/* files</description>

    <properties>
        <checkstyle.config.location>${basedir}/../checkstyle.xml</checkstyle.config.location>
        <checkstyle.skip>true</checkstyle.skip>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.glassfish.hk2</groupId>
            <artifactId>hk2-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
        </dependency>

        <!-- hk2-config tests use hibernate-validator which requires jakarta.el-api -->
        <dependency>
            <groupId>jakarta.el</groupId>
            <artifactId>jakarta.el-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.expressly</groupId>
            <artifactId>expressly</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.glassfish.hk2</groupId>
                <artifactId>osgiversion-maven-plugin</artifactId>
                <version>3.0.4</version>
                <!-- Since we don't want qualifier like SNAPSHOT to appear in package version attribute,
                    we use the following goal to populate a project property with an OSGi version which is equivalent
                    to maven version without qualifier and then use that property in osgi.bundle while exporting. -->
                <configuration>
                    <dropVersionComponent>qualifier</dropVersionComponent>
                    <versionPropertyName>project.osgi.version</versionPropertyName>
                </configuration>
                <executions>
                    <execution>
                        <id>generate-osgi-version-property</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>compute-osgi-version</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.glassfish.hk2</groupId>
                <artifactId>hk2-inhabitant-generator</artifactId>
                <version>3.0.4</version>
                <executions>
                    <execution>
                        <id>generate-inhabitants</id>
                        <goals>
                            <goal>generate-inhabitants</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>generate-test-inhabitants</id>
                        <goals>
                            <goal>generate-test-inhabitants</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>5.1.8</version>
                <configuration>
                    <instructions>
                        <Import-Package>*</Import-Package>
                        <_exportcontents>
                            org.jvnet.hk2.config;version=${project.osgi.version},
                            org.jvnet.hk2.config.api;version=${project.osgi.version},
                            org.jvnet.hk2.config.provider;version=${project.osgi.version},
                            org.jvnet.hk2.config.provider.internal;version=${project.osgi.version},
                            org.jvnet.hk2.config.tiger;version=${project.osgi.version}
                        </_exportcontents>
                        <_noimportjava>true</_noimportjava>
                        <Specification-Version>${project.osgi.version}</Specification-Version>
                    </instructions>
                    <unpackBundle>true</unpackBundle>
                </configuration>
                <executions>
                    <execution>
                        <id>bundle-manifest</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathLayoutType>custom</classpathLayoutType>
                            <customClasspathLayout>${artifact.artifactId}.${artifact.extension}</customClasspathLayout>
                        </manifest>
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
